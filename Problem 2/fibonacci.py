"""
File fibonacci.py
Version 1.0
Written by James Wang

December 8, 2012

Project Euler, Problem 2:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
find the sum of the even-valued terms.

"""

def generate_fibonacci(maximum):
    """Generates a Fibonacci sequence from 1 to maximum. Returns list."""
    list1 = [1]
    x = 2
    
    while x < maximum:
        # Add x to last element in list, set x to new fibonacci number
        list1.append(x)
        x = list1[len(list1) - 1] + list1[len(list1) - 2]

    return list1

    
def filter_even_odd(list2parse, even_odd):
    """Takes a list and filters for even or odd numbers. Returns list with even or odd removed.

    Use 0 to specify even, 1 to specify odd.

    """
    x = 0
    
    if even_odd == 0 or even_odd == 1:
        while x < len(list2parse):
            if list2parse[x] % 2 != even_odd:
                del list2parse[x]
                continue
            x += 1
    else:
        print("Error, invalid entry for even_odd")

    return list2parse


def main():

    fiboseq = generate_fibonacci(4000000)
    fibofiltered = filter_even_odd(generate_fibonacci(4000000), 0)
    
    print(fiboseq)
    print(fibofiltered)
    print(sum(fibofiltered))
    
main()










